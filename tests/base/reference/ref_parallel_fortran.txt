!$acc parallel private (a, b, c) num_gangs (6)
!$acc parallel async (5)
!$acc parallel attach (a, b, c)
!$acc parallel copy (a, b, c)
!$acc parallel copyin (x[0 : N], y[0:M])
!$acc parallel copyin (readonly: m, n)
!$acc parallel copyin (readonly: m, n, readonly)
!$acc parallel copyin (readonly: readonly::m, n, readonly)
!$acc parallel default (present)
!$acc parallel deviceptr (a, b, c)
!$acc parallel firstprivate (a, b, c)
!$acc parallel no_create (a, b, c)
!$acc parallel num_workers (6)
!$acc parallel present (a, b, c)
!$acc parallel vector_length (512)
!$acc parallel wait (12, 23, 34)
!$acc parallel copyout (12, 23, 34)
!$acc parallel copyout (zero: 12, 23, 34)
!$acc parallel copyout (zero: 12, 23, 34, zero)
!$acc parallel copyout (zero: zero::12, 23, 34)
!$acc parallel create (12, 23, 34)
!$acc parallel create (zero: 12, 23, 34)
!$acc parallel create (zero: 12, 23, 34, zero)
!$acc parallel create (zero: zero::12, 23, 34)
!$acc parallel if (5)
!$acc parallel if (x==3)
!$acc parallel self (5)
!$acc parallel self (x==3)
!$acc parallel device_type (x, y, z)
!$acc parallel reduction (+: x, y, z)
!$acc parallel reduction (*: x, y, z)
!$acc parallel reduction (max: x, y, z)
!$acc parallel reduction (max: x, y, max)
!$acc parallel reduction (max: max, y, z)
!$acc parallel reduction (max: max::x, y, max)
!$acc parallel reduction (max: max::x, max, max::y)
!$acc parallel reduction (min: x, y, z)
!$acc parallel reduction (min: x, y, min)
!$acc parallel reduction (min: min, y, z)
!$acc parallel reduction (min: min::x, y, min)
!$acc parallel reduction (min: min::x, min, min::y)
!$acc parallel reduction ($: x[5], y, z)
!$acc parallel reduction (|: x, y, z)
!$acc parallel reduction (^: x, y, z)
!$acc parallel reduction (&&: x, y, z)
!$acc parallel reduction (||: x, y, z)
!$acc parallel copyin (readonly: x, y, z, a, b, c)
!$acc parallel copyin (readonly: x, y, z, a, b, c, 1, 2, 3)
!$acc parallel copyin (x, y, z) copyin (readonly: a, b, c)
!$acc parallel copyin (readonly: x, y, z) copyin (a, b, c)
!$acc parallel copyin (x, y, z, a, b, c)
!$acc parallel copyout (zero: x, y, z, a, b, c)
!$acc parallel copyout (zero: x, y, z, a, b, c, 1, 2, 3)
!$acc parallel copyout (x, y, z) copyout (zero: a, b, c)
!$acc parallel copyout (zero: x, y, z) copyout (a, b, c)
!$acc parallel copyout (x, y, z, a, b, c)
!$acc parallel create (zero: x, y, z, a, b, c)
!$acc parallel create (zero: x, y, z, a, b, c, 1, 2, 3)
!$acc parallel create (x, y, z) create (zero: a, b, c)
!$acc parallel create (zero: x, y, z) create (a, b, c)
!$acc parallel create (x, y, z, a, b, c)
!$acc parallel reduction (+: x, y, z, a, b, c)
!$acc parallel reduction (+: x, y, z) reduction (*: a, b, c)
!$acc parallel reduction (max: x, y, z) reduction (min: a, b, c)
!$acc parallel reduction (min: x, y, z, a, b, c)
!$acc parallel reduction (min: x, y, z) reduction (&&: a, b, c)
!$acc parallel reduction (||: x, y, z) reduction (&&: a, b, c)
!$acc parallel reduction (&&: x, y, z, a, b, c)
!$acc parallel reduction (max: x, y, max, min)
!$acc parallel copyin (readonly: x, y, z) copyout (zero: x, y, z) create (zero: x, y, z) reduction (+: x, y, z)
!$acc parallel async (expression1) async (expression2) async (expression3)
!$acc parallel async (expression1) async (expression2)
!$acc parallel async (expression1) async
!$acc parallel async async (expression1)
!$acc parallel num_workers (expression1) num_workers (expression2) num_workers (expression3)
!$acc parallel num_workers (expression1) num_workers (expression2)
!$acc parallel vector_length (expression1) vector_length (expression2) vector_length (expression3)
!$acc parallel vector_length (expression1) vector_length (expression2)
!$acc parallel self (expression1) self (expression2) self (expression3)
!$acc parallel self (expression1) self (expression2)
!$acc parallel self (expression1) self
!$acc parallel self self (expression1)
!$acc parallel num_gangs (expression1) num_gangs (expression2) num_gangs (expression3)
!$acc parallel num_gangs (expression1) num_gangs (expression2)
!$acc parallel wait wait (a, b, c, d)
!$acc end parallel 
!$acc parallel deviceptr (a, b, c)
