#pragma acc kernels loop async (5)
#pragma acc kernels loop attach (a, b, c)
#pragma acc kernels loop copy (a, b, c)
#pragma acc kernels loop copyin(x[0 : N], y[0:M])
#pragma acc kernels loop copyin(readonly: m, n)
#pragma acc kernels loop copyin(readonly: m, n, readonly)
#pragma acc kernels loop copyin(readonly: readonly::m, n, readonly)
#pragma acc kernels loop default (present)
#pragma acc kernels loop deviceptr (a, b, c)
#pragma acc kernels loop no_create (a, b, c)
#pragma acc kernels loop num_workers (6)
#pragma acc kernels loop present (a, b, c)
#pragma acc kernels loop vector_length (512)
#pragma acc kernels loop wait (12, 23, 34)
#pragma acc kernels loop copyout(12, 23, 34)
#pragma acc kernels loop copyout(zero: 12, 23, 34)
#pragma acc kernels loop copyout(zero: 12, 23, 34, zero)
#pragma acc kernels loop copyout(zero: zero::12, 23, 34)
#pragma acc kernels loop create(12, 23, 34)
#pragma acc kernels loop create(zero: 12, 23, 34)
#pragma acc kernels loop create(zero: 12, 23, 34, zero)
#pragma acc kernels loop create(zero: zero::12, 23, 34)
#pragma acc kernels loop if (5)
#pragma acc kernels loop if (x==3)
#pragma acc kernels loop self (5)
#pragma acc kernels loop self (x==3)
#pragma acc kernels loop device_type (x, y, z)
#pragma acc kernels loop copyin(readonly: x, y, z, a, b, c)
#pragma acc kernels loop copyin(readonly: x, y, z, a, b, c, 1, 2, 3)
#pragma acc kernels loop copyin(x, y, z) copyin(readonly: a, b, c)
#pragma acc kernels loop copyin(readonly: x, y, z) copyin(a, b, c)
#pragma acc kernels loop copyin(x, y, z, a, b, c)
#pragma acc kernels loop copyout(zero: x, y, z, a, b, c)
#pragma acc kernels loop copyout(zero: x, y, z, a, b, c, 1, 2, 3)
#pragma acc kernels loop copyout(x, y, z) copyout(zero: a, b, c)
#pragma acc kernels loop copyout(zero: x, y, z) copyout(a, b, c)
#pragma acc kernels loop copyout(x, y, z, a, b, c)
#pragma acc kernels loop create(zero: x, y, z, a, b, c)
#pragma acc kernels loop create(zero: x, y, z, a, b, c, 1, 2, 3)
#pragma acc kernels loop create(x, y, z) create(zero: a, b, c)
#pragma acc kernels loop create(zero: x, y, z) create(a, b, c)
#pragma acc kernels loop create(x, y, z, a, b, c)
#pragma acc kernels loop async (expression1) async (expression2) async (expression3)
#pragma acc kernels loop async (expression1) async (expression2)
#pragma acc kernels loop async (expression1) async
#pragma acc kernels loop async async (expression1)
#pragma acc kernels loop num_workers (expression1) num_workers (expression2) num_workers (expression3)
#pragma acc kernels loop num_workers (expression1) num_workers (expression2)
#pragma acc kernels loop vector_length (expression1) vector_length (expression2) vector_length (expression3)
#pragma acc kernels loop vector_length (expression1) vector_length (expression2)
#pragma acc kernels loop self (expression1) self (expression2) self (expression3)
#pragma acc kernels loop self (expression1) self (expression2)
#pragma acc kernels loop self (expression1) self
#pragma acc kernels loop self self (expression1)
#pragma acc kernels loop num_gangs (expression1) num_gangs (expression2) num_gangs (expression3)
#pragma acc kernels loop num_gangs (expression1) num_gangs (expression2)
#pragma acc kernels loop wait wait (a, b, c, d)
#pragma acc kernels loop 
#pragma acc kernels loop private (a, b, c)
#pragma acc kernels loop auto
#pragma acc kernels loop auto
#pragma acc kernels loop collapse (1)
#pragma acc kernels loop collapse (1) collapse (2)
#pragma acc kernels loop collapse (1) collapse (2)
#pragma acc kernels loop device_type (a, b, c)
#pragma acc kernels loop gang
#pragma acc kernels loop gang (a, b, c)
#pragma acc kernels loop gang (a, b, c, d)
#pragma acc kernels loop gang (a, b, c) gang
#pragma acc kernels loop gang gang (a, b, c, d)
#pragma acc kernels loop independent
#pragma acc kernels loop independent
#pragma acc kernels loop seq
#pragma acc kernels loop vector (length: a)
#pragma acc kernels loop vector (length: a) vector (length: b)
#pragma acc kernels loop vector (length: a)
#pragma acc kernels loop vector (c) vector (length: c)
#pragma acc kernels loop vector (c) vector (b)
#pragma acc kernels loop vector (c)
#pragma acc kernels loop worker (num: a)
#pragma acc kernels loop worker (num: a) worker (num: b)
#pragma acc kernels loop worker (num: a)
#pragma acc kernels loop worker (c) worker (num: c)
#pragma acc kernels loop worker (c) worker (b)
#pragma acc kernels loop worker (c)
#pragma acc kernels loop tile (1)
#pragma acc kernels loop tile (1, 2)
#pragma acc kernels loop tile (1, 1, 2)
#pragma acc kernels loop tile (1, 1, 2) worker (num: a) worker (num: 5) independent collapse (1)
#pragma acc kernels loop reduction (+: x, y, z, a, b, c)
#pragma acc kernels loop reduction (+: x, y, z) reduction (*: a, b, c)
#pragma acc kernels loop reduction (max: x, y, z) reduction (min: a, b, c)
#pragma acc kernels loop reduction (min: x, y, z, a, b, c)
#pragma acc kernels loop reduction (min: x, y, z) reduction (&&: a, b, c)
#pragma acc kernels loop reduction (||: x, y, z) reduction (&&: a, b, c)
#pragma acc kernels loop reduction (&&: x, y, z, a, b, c)
#pragma acc kernels loop reduction (max: x, y, max, min)
#pragma acc kernels loop reduction (+: x, y, z)
#pragma acc kernels loop reduction (*: x, y, z)
#pragma acc kernels loop reduction (max: x, y, z)
#pragma acc kernels loop reduction (max: x, y, max)
#pragma acc kernels loop reduction (max: max, y, z)
#pragma acc kernels loop reduction (max: max::x, y, max)
#pragma acc kernels loop reduction (max: max::x, max, max::y)
#pragma acc kernels loop reduction (min: x, y, z)
#pragma acc kernels loop reduction (min: x, y, min)
#pragma acc kernels loop reduction (min: min, y, z)
#pragma acc kernels loop reduction (min: min::x, y, min)
#pragma acc kernels loop reduction (min: min::x, min, min::y)
#pragma acc kernels loop reduction (&: x[5], y, z)
#pragma acc kernels loop reduction (|: x, y, z)
#pragma acc kernels loop reduction (^: x, y, z)
#pragma acc kernels loop reduction (&&: x, y, z)
