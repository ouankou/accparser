!$acc kernels async (5)
!$acc kernels attach (a, b, c)
!$acc kernels copy (a, b, c)
!$acc kernels copyin (x[0 : N], y[0:M])
!$acc kernels copyin (readonly: m, n)
!$acc kernels copyin (readonly: m, n, readonly)
!$acc kernels copyin (readonly: readonly::m, n, readonly)
!$acc kernels default (present)
!$acc kernels deviceptr (a, b, c)
!$acc kernels no_create (a, b, c)
!$acc kernels num_workers (6)
!$acc kernels present (a, b, c)
!$acc kernels vector_length (512)
!$acc kernels wait (12, 23, 34)
!$acc kernels copyout (12, 23, 34)
!$acc kernels copyout (zero: 12, 23, 34)
!$acc kernels copyout (zero: 12, 23, 34, zero)
!$acc kernels copyout (zero: zero::12, 23, 34)
!$acc kernels create (12, 23, 34)
!$acc kernels create (zero: 12, 23, 34)
!$acc kernels create (zero: 12, 23, 34, zero)
!$acc kernels create (zero: zero::12, 23, 34)
!$acc kernels if (5)
!$acc kernels if (x==3)
!$acc kernels self (5)
!$acc kernels self (x==3)
!$acc kernels device_type (x, y, z)
!$acc kernels copyin (readonly: x, y, z, a, b, c)
!$acc kernels copyin (readonly: x, y, z, a, b, c, 1, 2, 3)
!$acc kernels copyin (x, y, z) copyin (readonly: a, b, c)
!$acc kernels copyin (readonly: x, y, z) copyin (a, b, c)
!$acc kernels copyin (x, y, z, a, b, c)
!$acc kernels copyout (zero: x, y, z, a, b, c)
!$acc kernels copyout (zero: x, y, z, a, b, c, 1, 2, 3)
!$acc kernels copyout (x, y, z) copyout (zero: a, b, c)
!$acc kernels copyout (zero: x, y, z) copyout (a, b, c)
!$acc kernels copyout (x, y, z, a, b, c)
!$acc kernels create (zero: x, y, z, a, b, c)
!$acc kernels create (zero: x, y, z, a, b, c, 1, 2, 3)
!$acc kernels create (x, y, z) create (zero: a, b, c)
!$acc kernels create (zero: x, y, z) create (a, b, c)
!$acc kernels create (x, y, z, a, b, c)
!$acc kernels async (expression1) async (expression2) async (expression3)
!$acc kernels async (expression1) async (expression2)
!$acc kernels async (expression1) async
!$acc kernels async async (expression1)
!$acc kernels num_workers (expression1) num_workers (expression2) num_workers (expression3)
!$acc kernels num_workers (expression1) num_workers (expression2)
!$acc kernels vector_length (expression1) vector_length (expression2) vector_length (expression3)
!$acc kernels vector_length (expression1) vector_length (expression2)
!$acc kernels self (expression1) self (expression2) self (expression3)
!$acc kernels self (expression1) self (expression2)
!$acc kernels self (expression1) self
!$acc kernels self self (expression1)
!$acc kernels num_gangs (expression1) num_gangs (expression2) num_gangs (expression3)
!$acc kernels num_gangs (expression1) num_gangs (expression2)
!$acc kernels wait wait (a, b, c, d)
!$acc end kernels 
