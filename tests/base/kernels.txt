
#pragma acc kernels async(5)

#pragma acc kernels attach(a, b, c)

#pragma acc kernels copy(a, b, c)

#pragma acc kernels copyin( x[0 : N], y[0:M] )

#pragma acc kernels copyin( readonly :m , n)

#pragma acc kernels copyin( readonly :m , n , readonly)

#pragma acc kernels copyin( readonly : readonly::m , n , readonly)

#pragma acc kernels default(present)

#pragma acc kernels deviceptr(a, b, c)

#pragma acc kernels no_create(a, b, c)

#pragma acc kernels num_workers(6)

#pragma acc kernels present(a, b, c)

#pragma acc kernels vector_length(512)

#pragma acc kernels wait(12, 23, 34)

#pragma acc kernels copyout(12, 23, 34)

#pragma acc kernels copyout(zero: 12, 23, 34)

#pragma acc kernels copyout(zero: 12, 23, 34, zero)

#pragma acc kernels copyout(zero: zero::12, 23, 34)

#pragma acc kernels create(12, 23, 34)

#pragma acc kernels create(zero: 12, 23, 34)

#pragma acc kernels create(zero: 12, 23, 34, zero)

#pragma acc kernels create(zero: zero::12, 23, 34)

#pragma acc kernels if(5)

#pragma acc kernels if(x==3)

#pragma acc kernels self(5)

#pragma acc kernels self(x==3)

#pragma acc kernels device_type(x, y, z)

#pragma acc kernels copyin( readonly : x, y, z) copyin( readonly : x, y, a) copyin( readonly : a, b, c)

#pragma acc kernels copyin( readonly : x, y, z) copyin( readonly : a, b, c) copyin( readonly : 1, 2, 3)

#pragma acc kernels copyin( x, y, z) copyin( readonly : a, b, c)

#pragma acc kernels copyin( readonly : x, y, z) copyin( a, b, c)

#pragma acc kernels copyin( x, y, z) copyin( a, b, c)

#pragma acc kernels copyout( zero : x, y, z) copyout( zero : x, y, a) copyout( zero : a, b, c)

#pragma acc kernels copyout( zero : x, y, z) copyout( zero : a, b, c) copyout( zero : 1, 2, 3)

#pragma acc kernels copyout( x, y, z) copyout( zero : a, b, c)

#pragma acc kernels copyout( zero : x, y, z) copyout( a, b, c)

#pragma acc kernels copyout( x, y, z) copyout( a, b, c)

#pragma acc kernels create( zero : x, y, z) create( zero : x, y, a) create( zero : a, b, c)

#pragma acc kernels create( zero : x, y, z) create( zero : a, b, c) create( zero : 1, 2, 3)

#pragma acc kernels create( x, y, z) create( zero : a, b, c)

#pragma acc kernels create( zero : x, y, z) create( a, b, c)

#pragma acc kernels create( x, y, z) create( a, b, c)

#pragma acc kernels async( expression1) async( expression2) async( expression3)

#pragma acc kernels async( expression1) async( expression2) async( expression1)

#pragma acc kernels async(expression1) async

#pragma acc kernels async async(expression1) async

#pragma acc kernels num_workers( expression1) num_workers( expression2) num_workers( expression3)

#pragma acc kernels num_workers( expression1) num_workers( expression2) num_workers( expression1)

#pragma acc kernels vector_length( expression1) vector_length( expression2) vector_length( expression3)

#pragma acc kernels vector_length( expression1) vector_length( expression2) vector_length( expression1)

#pragma acc kernels self( expression1) self( expression2) self( expression3)

#pragma acc kernels self( expression1) self( expression2) self( expression1)

#pragma acc kernels self(expression1) self

#pragma acc kernels self self(expression1) self

#pragma acc kernels num_gangs( expression1) num_gangs( expression2) num_gangs( expression3)

#pragma acc kernels num_gangs( expression1) num_gangs( expression2) num_gangs( expression1)

#pragma acc kernels wait wait(a, b, c) wait wait(d) wait wait(d) wait(a, c, d)
