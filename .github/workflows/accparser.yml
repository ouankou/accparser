name: accparser CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-llvm:
    strategy:
      matrix:
        os: [ubuntu-20.04]
        llvm: [9, 10, 11, 12]

    runs-on: ${{ matrix.os }}
    env:
      CC: /usr/bin/clang-${{ matrix.llvm }}
      CXX: /usr/bin/clang++-${{ matrix.llvm }}

    steps:
    - uses: actions/checkout@v2

    - name: Add LLVM repository key
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -

    - name: Add LLVM repository on Ubuntu 20.04
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: |
        sudo add-apt-repository -y 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-${{ matrix.llvm }} main'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          antlr4 \
          libantlr4-runtime-dev \
          build-essential \
          clang-${{ matrix.llvm }} \
          cmake

    - name: Build
      run: |
        cd $GITHUB_WORKSPACE/
        mkdir build
        cd build
        cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_BUILD_TYPE=Coverage -DBUILD_TESTS=ON ..
        make

    - name: Test
      run: |
        cd $GITHUB_WORKSPACE/build
        ./main.out ../tests/parallel.txt

  build-gnu:
    strategy:
      matrix:
        os: [ubuntu-20.04]
        gnu: [7, 8, 9, 10, 11]

    runs-on: ${{ matrix.os }}
    env:
      CC: /usr/bin/gcc-${{ matrix.gnu }}
      CXX: /usr/bin/g++-${{ matrix.gnu }}

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y \
          antlr4 \
          libantlr4-runtime-dev \
          build-essential \
          cmake \
          g++-${{ matrix.gnu }}

    - name: Build
      run: |
        cd $GITHUB_WORKSPACE/
        mkdir build
        cd build
        cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_BUILD_TYPE=Coverage -DBUILD_TESTS=ON ..
        make

    - name: Test
      run: |
        cd $GITHUB_WORKSPACE/build
        ./main.out ../tests/parallel.txt

  publish:
    needs: [build-llvm, build-gnu]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    # Use GitHub Actions' cache to shorten build times and decrease load on servers
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    # Specify the target branch
    - uses: helaili/jekyll-action@v2
      env:
      with:
        jekyll_src: 'docs'
        token: ${{ secrets.GITHUB_TOKEN }}
        target_branch: 'gh-pages'

